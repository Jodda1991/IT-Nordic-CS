// <auto-generated />
using System;
using HW_34.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HW_34.Migrations
{
    [DbContext(typeof(СorrespondenceContext))]
    [Migration("20190625072143_Correspondence")]
    partial class Correspondence
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HW_34.Domain.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("HW_34.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("HW_34.Domain.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("HW_34.Domain.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("HW_34.Domain.PostalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfPages");

                    b.HasKey("Id");

                    b.ToTable("PostalItems");
                });

            modelBuilder.Entity("HW_34.Domain.SendingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PostelItemId");

                    b.Property<int?>("ReceivingAddressId");

                    b.Property<int?>("ReceivingContractorId");

                    b.Property<int?>("SendingAddressId");

                    b.Property<int?>("SendingContractorId");

                    b.Property<int?>("StatusId");

                    b.Property<DateTimeOffset>("UpdateStatusDateTime");

                    b.HasKey("Id");

                    b.HasIndex("PostelItemId");

                    b.HasIndex("ReceivingAddressId");

                    b.HasIndex("ReceivingContractorId");

                    b.HasIndex("SendingAddressId");

                    b.HasIndex("SendingContractorId");

                    b.HasIndex("StatusId");

                    b.ToTable("SendingStatuses");
                });

            modelBuilder.Entity("HW_34.Domain.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("HW_34.Domain.Adress", b =>
                {
                    b.HasOne("HW_34.Domain.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("HW_34.Domain.Contractor", b =>
                {
                    b.HasOne("HW_34.Domain.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("HW_34.Domain.SendingStatus", b =>
                {
                    b.HasOne("HW_34.Domain.PostalItem", "PostelItem")
                        .WithMany()
                        .HasForeignKey("PostelItemId");

                    b.HasOne("HW_34.Domain.Adress", "ReceivingAddress")
                        .WithMany()
                        .HasForeignKey("ReceivingAddressId");

                    b.HasOne("HW_34.Domain.Contractor", "ReceivingContractor")
                        .WithMany()
                        .HasForeignKey("ReceivingContractorId");

                    b.HasOne("HW_34.Domain.Adress", "SendingAddress")
                        .WithMany()
                        .HasForeignKey("SendingAddressId");

                    b.HasOne("HW_34.Domain.Contractor", "SendingContractor")
                        .WithMany()
                        .HasForeignKey("SendingContractorId");

                    b.HasOne("HW_34.Domain.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
